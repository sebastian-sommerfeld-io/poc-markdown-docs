---


name: Build + Deployment Pipeline

on:
  push:
    branches-ignore:
      - dependabot/**
    paths-ignore:
      - '**.adoc'
      - '**.md'
      - 'docs/**'
      - '.devcontainer/**'
      - '.github/workflows/dev-environment.yml'
      - '.vscode/**'
      - '.gitkeep'
  schedule:
    - cron: '0 1 * * 2'

env:
  IMAGE_TAG_RC: rc
  IMAGE_TAG_LATEST: latest
  IMAGE_NAME: poc-markdown-docs
  CONTEXT: .
  DOCKERFILE: Dockerfile
  DOCS_PAGES_ARTIFACT: docs-page

permissions:
  contents: read

jobs:

  shellcheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@2.0.0
        with:
          ignore_paths: node_modules target

  lint:
    runs-on: ubuntu-latest
    name: ${{ matrix.linter }}
    strategy:
      matrix:
        linter: ['yaml', 'workflows', 'filenames', 'folders']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run lint-${{ matrix.linter }} from docker-compose.yml
        run: docker compose up lint-${{ matrix.linter }} --exit-code-from lint-${{ matrix.linter }}
        shell: bash

  # ----- Build Docs stage ------------------------------------------------------------------------

  docs-build:
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' }}
    permissions:
      contents: write
    env:
      DOCS_CONTEXT: docs/build
      DOCS_DOCKERFILE: Dockerfile
      DOCS_IMAGE: local/docs:dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{github.ref}}
      - name: Copy files from docs to project root
        run: |
          cp docs/content/about/index.md README.md
          cp docs/content/about/code-of-conduct.md CODE_OF_CONDUCT.md
          cp docs/content/about/contribute.md CONTRIBUTING.md
          cp docs/content/about/license.md LICENSE.md
          cp docs/content/about/security.md SECURITY.md
        shell: bash
      - name: Add do-not-edit remark to Markdown files in project root
        run: |
          for file in *.md; do
            {
              echo
              echo "<!-- !    DO NOT EDIT DIRECTLY !!!!!                              -->"
              echo "<!-- !    File is auto-generated by pipeline                      -->"
              echo "<!-- !    Contents are based on files from docs/contents/about    -->"
            } >> "$file"
          done
        shell: bash
      - name: Replace links in Markdown files in project root
        run: |
          for file in *.md; do
            content=$(cat "$file")

            old="(usage/index.md)"
            new="(docs/content/usage/index.md)"
            content="${content//$old/$new}"

            old="(about/index.md)"
            new="(docs/content/about/index.md)"
            content="${content//$old/$new}"

            echo "$content" > "$file"
          done
        shell: bash
      - name: hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: ${{ env.DOCS_CONTEXT }}/${{ env.DOCS_DOCKERFILE }}
      - name: Build docs-build image
        run: docker compose build docs-build
        shell: bash
      - name: Build docs page
        run: docker compose up docs-build
        shell: bash
      - name: List contents
        run: ls -alF docs/site
        shell: bash
      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@v3.0.1
        with:
          name: ${{ env.DOCS_PAGES_ARTIFACT }}
          path: docs/site
      - name: Commit and push
        uses: EndBug/add-and-commit@v9.1.4
        with:
          author_name: sebastian
          author_email: sebastian@sommerfeld.io
          message: 'docs: [Actions Bot] generate docs'

  docs-deploy:
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' && github.ref == 'refs/heads/main' }}
    needs: docs-build
    permissions:
      contents: read
      pages: write
      id-token: write # to verify the deployment originates from an appropriate source
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5.0.0
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4.0.5
        with:
          artifact_name: ${{ env.DOCS_PAGES_ARTIFACT }}

  # ----- Release stage ---------------------------------------------------------------------------

  release-code:
    runs-on: ubuntu-latest
    needs: [
      'lint',
      'shellcheck',
      'docs-deploy',
    ]
    if: ${{ (github.actor != 'dependabot[bot]') && (github.ref == 'refs/heads/main') }}
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{github.ref}}
      - name: Info - package.json
        run: cat package.json
        shell: bash
      - name: Install Node.js
        uses: actions/setup-node@v4.0.4
        with:
          node-version: 22.2.0
      - name: semantic-release - Install
        run: |
          npm install --save-dev semantic-release
          npm install --save-dev @semantic-release/commit-analyzer
          npm install --save-dev @semantic-release/release-notes-generator
          npm install --save-dev @semantic-release/npm
          npm install --save-dev @semantic-release/exec
          npm install --save-dev @semantic-release/git
          npm install --save-dev @semantic-release/github
        shell: bash
      - name: semantic-release - Run
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_REPO_AND_PROJECT }}
        run: npx semantic-release
        shell: bash
      - name: Info - package.json
        run: cat package.json
        shell: bash
      - name: Commit and push
        uses: EndBug/add-and-commit@v9.1.4
        with:
          author_name: sebastian
          author_email: sebastian@sommerfeld.io
          message: 'docs: [Actions Bot] bump version'
